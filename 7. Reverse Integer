/*
Reverse digits of an integer.

Example1: x = 123, return 321
Example2: x = -123, return -321

click to show spoilers.

Note:
The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows.
*/

#define INT_MAX_10 (INT_MAX / 10)
#define INT_MAX_LAST (INT_MAX % 10)

int reverse(int x) {
    
    int negitive = 0;
    if (x < 0)
    {
        if (x == -2147483648) return 0;
        x = -x;
        negitive = 1;
    }
    int answer = 0;
    while (x)
    {
        if (answer >= INT_MAX_10 + 1) 
        {
            return 0;
        }
        else if ((answer >= INT_MAX_10) && (x % 10 > INT_MAX_LAST) && (negitive == 0))
        {
            return 0;
        }
        else if ((answer >= INT_MAX_10) && (x % 10 > INT_MAX_LAST+1) && (negitive == 1))
        {
            return 0;
        }
        else
        {
            answer = answer * 10 + x % 10;
            x = x / 10;  
        }
    }
    
    if (negitive == 1) answer = -answer;
        
    return answer;
}
