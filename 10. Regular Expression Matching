/*
'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true
*/

bool isEmpty(char s) {
    return (s == '\0');
}
bool isMatch(char* s, char* p) {
    if (isEmpty(p[0])) return isEmpty(s[0]);
    if (strlen(p) > 1 && p[1] == '*') {
        return isMatch(s, p + 2) || (!isEmpty(s[0]) && (s[0] == p[0] || p[0] == '.') && isMatch(s + 1, p));
    } else {
        return !isEmpty(s[0]) && (s[0] == p[0] || p[0] == '.') && isMatch(s + 1, p + 1);
    }
   
}
