/*
Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].
*/

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> errout {-1,-1};        
        if (nums.size() == 0) return errout;
        if (target > nums[nums.size() - 1] || target < nums[0]) return errout;
        vector<int> result;     
        
        for (auto i = 0; i != nums.size(); i++) {
            if (nums[i] == target) {
                result.push_back(i);
                break;
            }
        }
        
        for (auto i = nums.size() - 1; i != -1; i--) {
            if (nums[i] == target) {
                result.push_back(i);
                break;
            }
        }
        if (result.size() < 2) return errout;
        return result;        
    }
};
