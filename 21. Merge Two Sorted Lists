/*
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;
        vector<int> myvec {};
        while(l1) {
            myvec.push_back(l1 -> val);
            l1 = l1 -> next;
        }       
        while(l2) {
            myvec.push_back(l2 -> val);
            l2 = l2 -> next;
        }        
        std::sort(myvec.begin(), myvec.end());       
        ListNode *mylist = new ListNode(-1);
        ListNode* cur = mylist;
        for (auto x : myvec) {
            ListNode *temp = new ListNode(x);           
            cur -> next = temp;
            cur = cur -> next;
        }        
        ListNode* psuhead = mylist;
        mylist = mylist->next;
        delete psuhead;
        return mylist;
    }
}; 
