/*
Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.
*/

int oneRomanToInt(char s) {
    switch (s) {
        case 'I':
            return 1;
        case 'V':
            return 5;
        case 'X':
            return 10;
        case 'L':
            return 50;
        case 'C':
            return 100;
        case 'D':
            return 500;
        case 'M':
            return 1000;
        default:
            return 0;
    }
}
int romanToInt(char* s) {
    int len = strlen(s);
    if (len == 0) return 0;
    if (len == 1) return oneRomanToInt(s[0]);
    int *eachnum = (int *) malloc(sizeof(int) * (len + 1));
    eachnum[len] = 0;
    int sum = 0;    
    for (int i = len - 1; i >= 0; i--) {
        eachnum[i] = oneRomanToInt(s[i]);
        if (eachnum[i] < eachnum[i + 1]) {
            sum -= eachnum[i];
        } else {
            sum += eachnum[i];
        }
    }
    
    return sum;
    
}
